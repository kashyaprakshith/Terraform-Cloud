name: build

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "rakshith-kashyap"
  TF_API_TOKEN: "${{ secrets.TF_TOKEN }}"
  TF_WORKSPACE: "rakshith-test"
  CONFIG_DIRECTORY: "./"  

permissions: read-all

jobs:

  build-terraform-Cloud:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      ## Security check
      # tfsec scans
      - name: Clone repo
        uses: actions/checkout@master
        
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif 
       # continue-on-error: true  
        
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif   
        
      ## checkov scan
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Test with checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./  ## replace "./" with the path of terraform files for scanning.
          output_file_path: checkov-results.sarif
        continue-on-error: true
        
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov-results.sarif

      ## Upload the Configuration to Terraform cloud
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.4
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          
      ## Create Plan Run
      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true  

      ## Plan Results
      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}    
      
      
