name: build

on: [push]

env:
  TF_CLOUD_ORGANIZATION: "rakshith-kashyap"
  TF_API_TOKEN: "${{ secrets.TF_TOKEN }}"
  TF_WORKSPACE: "rakshith-test"
  CONFIG_DIRECTORY: "./03_dev"

permissions: read-all

jobs:
  ## tfsec Plan
  tfsec:
    permissions:
      security-events: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          working_directory: ./03_dev  ## replace "./" with the path of terraform files for scanning.
          sarif_file: tfsec.sarif
       # continue-on-error: true
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif

  ## Checkov Scan        
  checkov:
    permissions:
      security-events: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Test with checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./03_dev  ## replace "./" with the path of terraform files for scanning.
          framework: terraform
          download_external_modules: true
          output_file_path: checkov-results.sarif
        continue-on-error: true
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov-results.sarif
            
        
  Terraform-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Terraform Format
        run: terraform fmt -recursive 
      

  ## Terraform Cloud Plan        
  tfc-plan:
    permissions:
      security-events: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      ## Upload the Configuration to Terraform cloud
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.4
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      ## Create Run
      - name: Create Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true

      ## Plan Results
      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.4
        id: plan-output
        with:
          plan: ${{ steps.run.outputs.plan_id }}
